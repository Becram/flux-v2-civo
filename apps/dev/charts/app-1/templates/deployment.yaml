apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deployment.name" . }}
  labels:
    app.kubernetes.io/name: {{ include "deployment.name" . }}
    helm.sh/chart: {{ include "deployment.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "deployment.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 10%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "deployment.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.annotations }}
      annotations:
        checksum.helm.kubernetes.io/autoscaler: {{ include (print $.Chart.Name "/templates/autoscale.yaml") . | sha256sum }}
      {{ toYaml .Values.annotations | indent 2 }}
      {{- end }}  
    spec:
      {{- if .Values.serviceaccount }}
      serviceAccount: {{ .Values.serviceaccount.name }}
      {{- else if .Values.existingServiceAccountName }}
      serviceAccount: {{ .Values.existingServiceAccountName }}
      {{- end }}
      terminationGracePeriodSeconds: 35
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- range $key, $value := .Values.nodeSelector }}
        {{ $key }}: {{ $value }}
      {{- end }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets.name }}
      {{- end }}
      {{- if .Values.volumes }}
      volumes:
{{ toYaml .Values.volumes | indent 6 }}
      {{- end }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: {{ include "deployment.name" . }}
      - maxSkew: 1
        topologyKey: node
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: {{ include "deployment.name" . }}
      containers:
      {{- if .Values.esp }}
      - name: esp
        image: {{ .Values.esp.image}}
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - 4s
        args: [
                    {{- range $index, $element := .Values.esp.args -}}
                    {{- if $index -}},{{- end -}}
                    {{- $element | quote -}}
                    {{- end -}}
                  ]
        
        ports:
        - name: esp
          containerPort: {{ .Values.esp.containerPort }}
        {{- if .Values.esp.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.esp.livenessProbe | indent 10 }}
        {{- end }}
        {{- if .Values.esp.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.esp.readinessProbe | indent 10 }}
        {{- end }}
        {{- if .Values.esp.resources }}
        resources: 
{{ toYaml .Values.esp.resources | indent 10 }}
        {{- end }}
      {{- end }}
      - name: {{ include "deployment.name" . }}
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - 4s
        {{- if .Values.args }}
        args: [
                  {{- range $index, $element := .Values.args -}}
                  {{- if $index -}},{{- end -}}
                  {{- $element | quote -}}
                  {{- end -}}
                ]
        {{- end }}
        image: {{ .Values.image }}
        {{- if .Values.volumeMounts }}
        volumeMounts:
{{ toYaml .Values.volumeMounts | indent 8 }}
        {{- end }}
        {{- if .Values.command }}
        command: [
                    {{- range $index, $element := .Values.command -}}
                    {{- if $index -}},{{- end -}}
                    {{- $element | quote -}}
                    {{- end -}}
                  ]
        {{- end }}
        {{- if .Values.livenessProbe }}
        livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
        {{- end }}
        {{- if .Values.readinessProbe }}
        readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
        {{- end }}
        env:
        {{- range $key, $value := .Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
        {{- end }}
        {{- range $secrets := .Values.secrets }}
        {{- range $secret := $secrets.values }}
          - name: {{ $secret | upper  }}
            valueFrom:
              secretKeyRef:
                name: {{ $secrets.name }}
                key: "{{ $secret }}"
        {{- end }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.containerPort }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- end }}